{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Factory-databricks-victor"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/df_customer_join_order')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_fixo_customer_csv",
								"type": "DatasetReference"
							},
							"name": "PlanCustomersData"
						},
						{
							"dataset": {
								"referenceName": "ds_fixo_orders_csv",
								"type": "DatasetReference"
							},
							"name": "PlanOrdersData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_generico_csv",
								"type": "DatasetReference"
							},
							"name": "ResultadoJoin"
						}
					],
					"transformations": [
						{
							"name": "JoinCustomerOrders"
						},
						{
							"name": "SelectFromFiles"
						}
					],
					"scriptLines": [
						"source(output(",
						"          customer_id as string,",
						"          first_name as string,",
						"          last_name as string,",
						"          phone as string,",
						"          email as string,",
						"          street as string,",
						"          city as string,",
						"          state as string,",
						"          zip_code as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> PlanCustomersData",
						"source(output(",
						"          order_id as string,",
						"          customer_id as string,",
						"          order_status as string,",
						"          order_date as string,",
						"          required_date as string,",
						"          shipped_date as string,",
						"          store_id as string,",
						"          staff_id as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> PlanOrdersData",
						"PlanCustomersData, PlanOrdersData join(PlanCustomersData@customer_id == PlanOrdersData@customer_id,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> JoinCustomerOrders",
						"JoinCustomerOrders select(mapColumn(",
						"          {Id cliente} = PlanCustomersData@customer_id,",
						"          {Primeiro nome} = first_name,",
						"          {Ultimo nome} = last_name,",
						"          Telefone = phone,",
						"          email,",
						"          Rua = street,",
						"          Cidade = city,",
						"          Estado = state,",
						"          CEP = zip_code,",
						"          {Status pedido} = order_status,",
						"          {Id pedido} = order_id,",
						"          {Data pedido} = order_date,",
						"          required_date,",
						"          shipped_date,",
						"          store_id,",
						"          staff_id",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectFromFiles",
						"SelectFromFiles sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     filePattern:(concat('Extracao-', toString(currentDate()), '.csv')),",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> ResultadoJoin"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/execute_data_flow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_customer_join_order",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"PlanCustomersData": {},
									"PlanOrdersData": {},
									"ResultadoJoin": {
										"containerName": "csvfiles",
										"fileName": "concat('Extracao-', toString(currentDate()), '.csv')",
										"separatorName": ","
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "adf_01_handson01"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_customer_join_order')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/execute_pipes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "exec_pratica_01",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "csv_to_parquet_with_filter",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "exec_pratica_02",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "exec_pratica_01",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "parquet_to_sql",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "exec_pratica_03",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "exec_pratica_02",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "db_to_parquet",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "adf_01_handson01"
				},
				"annotations": [],
				"lastPublishTime": "2024-12-17T13:40:01Z"
			},
			"dependsOn": []
		}
	]
}